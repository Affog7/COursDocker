{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { City, Weather } from \"../data/stub\";\nimport { setWeatherList } from \"../redux/actions/Action\";\nexport var getWeathersList = function getWeathersList() {\n  return function () {\n    var _ref = _asyncToGenerator(function* (dispatch) {\n      try {\n        var citiesPromise = yield fetch('https://iut-weather-api.azurewebsites.net/cities');\n        var citiesListJson = yield citiesPromise.json();\n        var citiesList = citiesListJson.map(function (elt) {\n          return new City(elt[\"name\"], elt[\"latitude\"], elt[\"longitude\"]);\n        });\n        var weatherList = [];\n        for (var index = 0; index < citiesList.length; index++) {\n          var weathersPromise = yield fetch('https://iut-weather-api.azurewebsites.net/weather/city/name/' + citiesList[index].name);\n          var weathersListJson = yield weathersPromise.json();\n          console.log(weathersPromise);\n          var weatherData = new Weather(weathersListJson.at, weathersListJson.visibility, weathersListJson.weatherType, weathersListJson.weatherDescription, weathersListJson.temperature, weathersListJson.temperatureFeelsLike, weathersListJson.humidity, weathersListJson.windSpeed, weathersListJson.pressure, citiesList[index]);\n          weatherList.push(weatherData);\n        }\n        dispatch(setWeatherList(weatherList));\n      } catch (error) {\n        console.log('Error---------', error);\n      }\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"names":["City","Weather","setWeatherList","getWeathersList","_ref","_asyncToGenerator","dispatch","citiesPromise","fetch","citiesListJson","json","citiesList","map","elt","weatherList","index","length","weathersPromise","name","weathersListJson","console","log","weatherData","at","visibility","weatherType","weatherDescription","temperature","temperatureFeelsLike","humidity","windSpeed","pressure","push","error","_x","apply","arguments"],"sources":["C:/Users/Affognon/Desktop/reactProj/MeteoApp/Meteo/thunk/thunkListWeather.tsx"],"sourcesContent":["import { City, Weather } from \"../data/stub\";\r\nimport { setWeatherList } from \"../redux/actions/Action\";\r\n\r\nexport const getWeathersList = () => {\r\n  return async dispatch => {\r\n    try {\r\n      const citiesPromise = await fetch('https://iut-weather-api.azurewebsites.net/cities');\r\n      const citiesListJson = await citiesPromise.json();\r\n       const citiesList: City[] = citiesListJson.map(elt => new City(elt[\"name\"], elt[\"latitude\"], elt[\"longitude\"]));\r\n\r\n      let weatherList: Weather[] = [];\r\n\r\n      for (let index = 0; index < citiesList.length; index++) {\r\n\r\n        let weathersPromise = await fetch('https://iut-weather-api.azurewebsites.net/weather/city/name/' + citiesList[index].name);\r\n        let weathersListJson = await weathersPromise.json();\r\n\r\n        console.log(weathersPromise);\r\n   \r\n          let weatherData =  new Weather(\r\n            weathersListJson.at,\r\n            weathersListJson.visibility,\r\n              weathersListJson.weatherType,\r\n              weathersListJson.weatherDescription,\r\n              weathersListJson.temperature,\r\n              weathersListJson.temperatureFeelsLike,\r\n              weathersListJson.humidity,\r\n              weathersListJson.windSpeed,\r\n              weathersListJson.pressure,\r\n              citiesList[index]\r\n            );\r\n     \r\n        \r\n          weatherList.push(weatherData)\r\n       \r\n\r\n      \r\n    }\r\n    dispatch(setWeatherList(weatherList));\r\n    } catch (error) {\r\n      console.log('Error---------', error);\r\n    }\r\n  }\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,OAAO;AACtB,SAASC,cAAc;AAEvB,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EACnC;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAO,WAAMC,QAAQ,EAAI;MACvB,IAAI;QACF,IAAMC,aAAa,SAASC,KAAK,CAAC,kDAAkD,CAAC;QACrF,IAAMC,cAAc,SAASF,aAAa,CAACG,IAAI,CAAC,CAAC;QAChD,IAAMC,UAAkB,GAAGF,cAAc,CAACG,GAAG,CAAC,UAAAC,GAAG;UAAA,OAAI,IAAIb,IAAI,CAACa,GAAG,CAAC,MAAM,CAAC,EAAEA,GAAG,CAAC,UAAU,CAAC,EAAEA,GAAG,CAAC,WAAW,CAAC,CAAC;QAAA,EAAC;QAE/G,IAAIC,WAAsB,GAAG,EAAE;QAE/B,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGJ,UAAU,CAACK,MAAM,EAAED,KAAK,EAAE,EAAE;UAEtD,IAAIE,eAAe,SAAST,KAAK,CAAC,8DAA8D,GAAGG,UAAU,CAACI,KAAK,CAAC,CAACG,IAAI,CAAC;UAC1H,IAAIC,gBAAgB,SAASF,eAAe,CAACP,IAAI,CAAC,CAAC;UAEnDU,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;UAE1B,IAAIK,WAAW,GAAI,IAAIrB,OAAO,CAC5BkB,gBAAgB,CAACI,EAAE,EACnBJ,gBAAgB,CAACK,UAAU,EACzBL,gBAAgB,CAACM,WAAW,EAC5BN,gBAAgB,CAACO,kBAAkB,EACnCP,gBAAgB,CAACQ,WAAW,EAC5BR,gBAAgB,CAACS,oBAAoB,EACrCT,gBAAgB,CAACU,QAAQ,EACzBV,gBAAgB,CAACW,SAAS,EAC1BX,gBAAgB,CAACY,QAAQ,EACzBpB,UAAU,CAACI,KAAK,CAClB,CAAC;UAGHD,WAAW,CAACkB,IAAI,CAACV,WAAW,CAAC;QAInC;QACAhB,QAAQ,CAACJ,cAAc,CAACY,WAAW,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdb,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,KAAK,CAAC;MACtC;IACF,CAAC;IAAA,iBAAAC,EAAA;MAAA,OAAA9B,IAAA,CAAA+B,KAAA,OAAAC,SAAA;IAAA;EAAA;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}